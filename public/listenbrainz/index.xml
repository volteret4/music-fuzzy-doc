<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>listenbrainz :: mfuz</title>
    <link>//192.168.1.133:1313/listenbrainz/index.html</link>
    <description>7. [[scrobbles_listenbrainz.py]] Este script se encarga de obtener y procesar los registros de escuchas (listens) desde ListenBrainz, almacenándolos en una base de datos SQLite y enlazándolos con canciones, artistas y álbumes existentes en tu biblioteca.&#xA;| Argumento | Tipo | Descripción | Valor por Defecto | | ---------------------- | ------ | ------------------------------------------------------------------------------------------- | ----------------- | | `--config` | `str` | Ruta al archivo de configuración JSON | — | | `--user` | `str` | Nombre de usuario en ListenBrainz | — | | `--token` | `str` | Token de autenticación para ListenBrainz | — | | `--db-path` | `str` | Ruta al archivo de base de datos SQLite | — | | `--force-update` | `bool` | Si se debe forzar una actualización completa (ignorando el último timestamp) | `False` | | `--output-json` | `str` | Ruta para guardar los listens en formato JSON (opcional) | — | | `--max-items` | `int` | Número máximo de listens a obtener por llamada | `1000` | | `--limit-process` | `int` | Número máximo de listens a procesar (opcional) | — | | `--reprocess-existing` | `bool` | Si se deben reprocesar los listens existentes con los métodos de coincidencia seleccionados | `False` | | `--normalize-strings` | `bool` | Si se deben normalizar las cadenas para mejorar coincidencias | `False` | | `--enhanced-matching` | `bool` | Si se deben crear y usar tablas normalizadas para buscar coincidencias | `False` | | `--mbid-matching` | `bool` | Si se debe intentar coincidencia por MusicBrainz IDs | `False` | | `--fuzzy-matching` | `bool` | Si se debe usar coincidencia difusa para encontrar canciones | `False` | | `--analyze-mismatches` | `bool` | Si se deben analizar las razones de discrepancias | `False` | | `--use-all-matching` | `bool` | Si se deben utilizar todas las técnicas de coincidencia mejoradas | `False` | # Tabla listens Campo Tipo Descripción id INTEGER ID único para cada listen (clave primaria) track_name TEXT Nombre de la pista/canción album_name TEXT Nombre del álbum (opcional) artist_name TEXT Nombre del artista timestamp INTEGER Timestamp en formato Unix de cuando se escuchó la canción listen_date TEXT Fecha y hora en formato legible de cuando se escuchó la canción listenbrainz_url TEXT URL a la página de ListenBrainz del usuario song_id INTEGER ID de la canción correspondiente en la tabla songs (si se encuentra) album_id INTEGER ID del álbum correspondiente en la tabla albums (si se encuentra) artist_id INTEGER ID del artista correspondiente en la tabla artists (si se encuentra) additional_data TEXT Metadatos adicionales en formato JSON (añadido dinámicamente) Tabla listenbrainz_config Campo Tipo Descripción id INTEGER ID único siempre 1 (solo una configuración) username TEXT Nombre de usuario en ListenBrainz last_timestamp INTEGER Último timestamp procesado last_updated TIMESTAMP Fecha y hora de la última actualización Tabla normalized_songs (si se activa enhanced_matching) Campo Tipo Descripción song_id INTEGER ID de la canción normalized_title TEXT Título normalizado normalized_artist TEXT Artista normalizado normalized_album TEXT Álbum normalizado Este script permite varios métodos para mejorar la búsqueda estricta:</description>
    <generator>Hugo</generator>
    <language>es-ES</language>
    <atom:link href="//192.168.1.133:1313/listenbrainz/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>